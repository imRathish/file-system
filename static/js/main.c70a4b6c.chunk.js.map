{"version":3,"sources":["utils/util.js","Constants.js","components/widgets/FileDetailsPopUp.js","components/widgets/RenameDialog.js","store/fileSystem/action.js","components/main-panel/Icon.js","images/addFiles.png","components/main-panel/FilesView.js","components/main-panel/SearchBox.js","components/main-panel/Actions.js","components/main-panel/MainPanelContainer.js","components/left-panel/FileTree.js","App.js","store/fileSystem/reducer.js","store/store.js","index.js"],"names":["generateId","parentPath","fileName","btoa","filesys_types","NEWFOLDER_NAME","ROOTNAME","useStyles","makeStyles","theme","popover","pointerEvents","paper","padding","spacing","FileDetailsPopUp","props","classes","anchor","handleClose","file","totalSize_formatted","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatBytes","useSelector","fileSystem","filesys_type","size","children","length","map","id","find","reduce","prev","curr","open","Boolean","Popover","className","elevation","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","keepMounted","disableRestoreFocus","Grid","container","direction","item","Typography","variant","type","NaN","createdDate","RenameDialog","url","React","useState","newName","setNewName","error","setError","existingFiles","filter","handCloseDialog","isDuplicate","includes","Dialog","DialogTitle","DialogContent","TextField","autoFocus","helperText","margin","placeholder","fullWidth","onChange","e","target","value","DialogActions","Button","onClick","color","ADD_FOLDER","ADD_FILES","DELETE_FOLDER","RENAME_FILE","deleteFolder","fileIds","rootDir","rootDirId","root","display","backgroundColor","Icon","name","rootdir","isSelectedFile","selectedFiles","updateSelectedFiles","fileDetailsAnchor","setFileDetailsAnchor","openRenameDialog","setOpenRenameDialog","dispatch","useDispatch","history","useHistory","mouseX","mouseY","cursorPosition","setCursorPosition","handleFileDetailsClose","download","selectedFile","fileObj","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","ClickAwayListener","onClickAway","event","ctrlKey","style","onContextMenu","preventDefault","clientX","clientY","onDoubleClick","push","currentTarget","onMouseLeave","alignItems","fontSize","align","Menu","anchorReference","anchorPosition","top","left","undefined","MenuItem","oldFileId","newFileName","newFileId","renameFile","FilesView","setSelectedFiles","el","obj","child","justify","marginTop","src","addFilesImg","width","height","SearchBox","files","Autocomplete","options","autoHighlight","getOptionLabel","option","parent","atob","renderInput","params","Actions","uploadRef","useRef","startIcon","addFolder","current","ref","uploaded_files","Object","values","existing_files_uploaded","addFiles","hidden","multiple","Snackbar","autoHideDuration","reason","message","paddingTop","paddingBottom","MainPanelContainer","useParams","useRouteMatch","isExact","Container","maxWidth","md","IconButton","goBack","path","flexGrow","RecursiveTreeView","filesystem","handleItemClick","Divider","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","renderTree","rootDirObj","TreeItem","nodeId","label","renderIcon","labelText","Array","isArray","node","drawer","position","content","overflowY","overflowX","appBarSpacer","mixins","toolbar","App","CssBaseline","Drawer","to","initialState","rootReducer","combineReducers","state","action","folderName","newFolderId","newstate","concat","currDate","Date","getDate","getMonth","getFullYear","fileList","newState","extension","split","fileId","createStore","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.c70a4b6c.chunk.js","sourcesContent":["// Utility functions\r\n\r\n// Convert bytes into other higher units\r\nexport const formatBytes = (bytes, decimals = 2) => {\r\n  if (bytes === 0) return '0 Bytes';\r\n\r\n  const k = 1024;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n}\r\n\r\n// Generate ID by using base64 encoding\r\nexport const generateId = (parentPath, fileName) => {\r\n  if(fileName){\r\n    return btoa(`${parentPath}/${fileName}`);\r\n  }else{\r\n    return btoa(`${parentPath}`);\r\n  }\r\n}","export const filesys_types = {\r\n    ROOT: \"ROOT\",\r\n    FOLDER: \"FOLDER\",\r\n    FILE: \"FILE\"\r\n}\r\nexport const NEWFOLDER_NAME = \"New folder\";\r\nexport const ROOTNAME = \"My Drive\";","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { formatBytes } from '../../utils/util';\r\nimport { filesys_types } from '../../Constants'\r\nimport { Popover, Typography, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function FileDetailsPopUp(props) {\r\n  const classes = useStyles();\r\n  const { anchor, handleClose, file } = props;\r\n  const totalSize = useSelector(({ fileSystem }) => {\r\n    if (file.filesys_type === filesys_types[\"FILE\"]) {\r\n      return file.size\r\n    }\r\n    if (file.children.length === 0) {\r\n      return 0;\r\n    }\r\n    const childrenSizes = file.children.map(id => {\r\n      return fileSystem.find(file => file.id === id)[\"size\"];\r\n    });\r\n    return childrenSizes.reduce((prev, curr) => prev + curr);\r\n  });\r\n\r\n  const totalSize_formatted = formatBytes(totalSize)\r\n\r\n  const open = Boolean(anchor);\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        elevation={2}\r\n        anchorEl={anchor}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handleClose}\r\n        keepMounted\r\n        disableRestoreFocus\r\n      >\r\n        <Grid container direction=\"column\" spacing={1}>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">{`Type: ${file.filesys_type === filesys_types[\"FOLDER\"] ? \"Folder\" : file.type}`}</Typography>\r\n\r\n          </Grid>\r\n          <Grid item>\r\n            {totalSize_formatted!==NaN && <Typography variant=\"caption\">{`Size: ${totalSize_formatted}`}</Typography>}\r\n\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">{`Created Date: ${file.createdDate}`}</Typography>\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useSelector } from 'react-redux';\r\nimport { generateId } from '../../utils/util';\r\n\r\nexport default function RenameDialog(props) {\r\n  const { open, fileName, url, handleClose } = props;\r\n  const [newName, setNewName] = React.useState(null);\r\n  const [error, setError] = React.useState(null);\r\n  const existingFiles = useSelector(({ fileSystem }) => {\r\n    return fileSystem.map(file => file.id).filter(id => id !== \"ROOT\")\r\n  })\r\n\r\n  const handCloseDialog = (newName) => {\r\n    if (newName) {\r\n      if (!isDuplicate(newName)) {\r\n        handleClose(newName);\r\n        setError(null);\r\n        return;\r\n      } else {\r\n        setError(\"File/Folder already exists! Give a different name\")\r\n        return;\r\n      }\r\n\r\n    }\r\n    setError(null);\r\n    handleClose()\r\n  }\r\n  const isDuplicate = (newName) => {\r\n    return existingFiles.includes(generateId(url, newName));\r\n  }\r\n\r\n  return (\r\n\r\n    <Dialog open={open} onClose={() => { handCloseDialog(null) }} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">{`Rename ${fileName}`}</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          error={error ? true : false}\r\n          helperText={error}\r\n          margin=\"dense\"\r\n          id=\"new-file-name\"\r\n          placeholder={`Enter new name`}\r\n          fullWidth\r\n          onChange={(e) => { setNewName(e.target.value) }}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => { handCloseDialog(null) }} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => { handCloseDialog(newName) }} color=\"primary\">\r\n          Rename\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import { generateId } from '../../utils/util';\r\nimport { ROOTNAME } from '../../Constants'\r\n\r\nexport const ADD_FOLDER = \"ADD_FOLDER\";\r\nexport const ADD_FILES = \"ADD_FILE\";\r\nexport const DELETE_FOLDER = \"DELETE_FOLDER\";\r\nexport const RENAME_FILE = \"RENAME_FILE\";\r\n\r\nexport const addFolder = (rootDir, parentPath) => {\r\n  return { type: ADD_FOLDER, rootDir, parentPath, rootDirId: rootDir === ROOTNAME ? \"ROOT\" : generateId(parentPath) };\r\n};\r\nexport const addFiles = (files, rootDir, parentPath) => {\r\n\r\n  return { type: ADD_FILES, files, rootDir, parentPath, rootDirId: rootDir === ROOTNAME ? \"ROOT\" : generateId(parentPath) };\r\n};\r\nexport const deleteFolder = (fileIds, rootDir, parentPath) => {\r\n  return { type: DELETE_FOLDER, fileIds, rootDir, rootDirId: rootDir === ROOTNAME ? \"ROOT\" : generateId(parentPath) };\r\n};\r\n\r\nexport const renameFile = (oldFileId, newFileName, rootDir, filesys_type, parentPath) => {\r\n  return { type: RENAME_FILE, oldFileId, newFileName, rootDirId: rootDir === ROOTNAME ? \"ROOT\" : generateId(parentPath), newFileId: generateId(parentPath, newFileName), rootDir, filesys_type }\r\n}\r\n\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileDetails from '../widgets/FileDetailsPopUp';\r\nimport RenameDialog from '../widgets/RenameDialog';\r\nimport { renameFile, deleteFolder } from '../../store/fileSystem/action';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport { Grid, Typography, ClickAwayListener, Menu, MenuItem } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DescriptionSharpIcon from '@material-ui/icons/DescriptionSharp';\r\nimport { filesys_types } from '../../Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: 2,\r\n    '&:hover': {\r\n      backgroundColor: '#cde7fe',\r\n    },\r\n  },\r\n\r\n}));\r\n\r\nexport default function Icon(props) {\r\n  const { id, name, filesys_type, } = props.file;\r\n  const { url, rootdir, isSelectedFile, selectedFiles, updateSelectedFiles } = props;\r\n  const [fileDetailsAnchor, setFileDetailsAnchor] = React.useState(null);\r\n  const [openRenameDialog, setOpenRenameDialog] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n  const fileSystem = useSelector(({ fileSystem }) => {\r\n    return fileSystem\r\n  })\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [cursorPosition, setCursorPosition] = React.useState({\r\n    mouseX: null,\r\n    mouseY: null,\r\n  });\r\n\r\n  const handleDoubleClick = () => {\r\n    if (filesys_type === filesys_types[\"FILE\"]) {\r\n      return;\r\n    }\r\n    history.push(`${url}/${name}`)\r\n  }\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    setFileDetailsAnchor(null);\r\n    if (selectedFiles.length > 0 && !isSelectedFile) {\r\n      updateSelectedFiles([]);\r\n    }\r\n    if (cursorPosition.mouseX !== 0 || cursorPosition.mouseY !== 0) {\r\n      setCursorPosition({\r\n        mouseX: null,\r\n        mouseY: null,\r\n      });\r\n    }\r\n    setCursorPosition({\r\n      mouseX: event.clientX - 2,\r\n      mouseY: event.clientY - 4,\r\n    });\r\n  };\r\n  const handleClose = () => {\r\n    setCursorPosition({\r\n      mouseX: null,\r\n      mouseY: null,\r\n    });\r\n  };\r\n\r\n  const handleDeleteFolder = () => {\r\n    if (selectedFiles.length > 0) {\r\n      dispatch(deleteFolder(selectedFiles, rootdir, url));\r\n    } else {\r\n      dispatch(deleteFolder([id], rootdir, url));\r\n    }\r\n    handleClose();\r\n  }\r\n  const handleFileDetailsOpen = (event) => {\r\n    if (event.ctrlKey && filesys_type !== filesys_types[\"FOLDER\"]) {\r\n      if (isSelectedFile) {\r\n        updateSelectedFiles(selectedFiles.filter(id => id !== id));\r\n      } else {\r\n        updateSelectedFiles([...selectedFiles, id]);\r\n      }\r\n      return;\r\n    }\r\n    setFileDetailsAnchor(event.currentTarget);\r\n  };\r\n  const handleFileDetailsClose = () => {\r\n    setFileDetailsAnchor(null);\r\n  };\r\n  const download = (selectedFile) => {\r\n    const fileObj = fileSystem.find(file => file.id === selectedFile);\r\n    var element = document.createElement('a');\r\n    element.setAttribute('href',\r\n      `data:${fileObj.filesys_type};charset=utf-8, `\r\n      + encodeURIComponent(\"Sample\"));\r\n    element.setAttribute('download', fileObj.name);\r\n\r\n\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n  }\r\n  const handleDownload = () => {\r\n    handleFileDetailsClose();\r\n    handleClose();\r\n    if (selectedFiles.length > 0) {\r\n      for (const selectedFile of selectedFiles) {\r\n        download(selectedFile)\r\n      }\r\n    } else {\r\n      download(id)\r\n    }\r\n\r\n  }\r\n  const handleOpenRenameDialog = () => {\r\n    setOpenRenameDialog(true);\r\n    handleClose();\r\n    setFileDetailsAnchor(null)\r\n  }\r\n  const handleCloseRenameDialog = (newName) => {\r\n    if (newName) {\r\n      dispatch(renameFile(id, newName, rootdir, filesys_type, url))\r\n    }\r\n    setOpenRenameDialog(false);\r\n    handleClose();\r\n    setFileDetailsAnchor(null)\r\n  }\r\n  const handleClickAway = (event) => {\r\n    if (event.ctrlKey) {\r\n      return;\r\n    }\r\n    setFileDetailsAnchor(null)\r\n    updateSelectedFiles([]);\r\n  }\r\n  return (\r\n    <div>\r\n      <ClickAwayListener onClickAway={handleClickAway}>\r\n\r\n        <div className={classes.root} style={{ backgroundColor: isSelectedFile ? '#cde7fe' : null }} onContextMenu={handleClick} onDoubleClick={handleDoubleClick} onClick={handleFileDetailsOpen} onMouseLeave={handleFileDetailsClose}>\r\n          <Grid container direction=\"column\" alignItems=\"center\">\r\n            <Grid item>\r\n              {filesys_type === filesys_types[\"FOLDER\"] && <FolderIcon style={{ fontSize: 100, color: \"#F8D775\" }} />}\r\n              {filesys_type === filesys_types[\"FILE\"] && <DescriptionSharpIcon style={{ fontSize: 100, color: \"#7d7d7d\" }} />}\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography align=\"center\" variant=\"caption\">{name}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <FileDetails anchor={fileDetailsAnchor} handleClose={handleFileDetailsClose} file={props.file} />\r\n        </div>\r\n\r\n      </ClickAwayListener>\r\n      <Menu\r\n        keepMounted\r\n        open={cursorPosition.mouseY !== null}\r\n        onClose={handleClose}\r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n          cursorPosition.mouseY !== null && cursorPosition.mouseX !== null\r\n            ? { top: cursorPosition.mouseY, left: cursorPosition.mouseX }\r\n            : undefined\r\n        }\r\n      >\r\n        <MenuItem id=\"Delete-file\" onClick={handleDeleteFolder}>Delete</MenuItem>\r\n        {selectedFiles.length === 0 && <MenuItem id=\"Raname-file\" onClick={handleOpenRenameDialog}>Rename</MenuItem>}\r\n        {filesys_type !== filesys_types[\"FOLDER\"] && <MenuItem id=\"Download-file\" onClick={handleDownload}>Download</MenuItem>}\r\n\r\n      </Menu>\r\n      <RenameDialog open={openRenameDialog} handleClose={handleCloseRenameDialog} fileName={name} url={url} />\r\n\r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/addFiles.baa96afa.png\";","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Icon from './Icon'\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { generateId } from '../../utils/util';\r\nimport addFilesImg from '../../images/addFiles.png';\r\nimport { ROOTNAME } from '../../Constants'\r\n\r\nexport default function FilesView(props) {\r\n    const { rootdir, url } = props\r\n    const [selectedFiles, setSelectedFiles] = React.useState([]);\r\n    const history = useHistory();\r\n\r\n    const children = useSelector(({ fileSystem }) => {\r\n        const file = fileSystem.find(el => el.id === ((rootdir === ROOTNAME) ? \"ROOT\" : generateId(url)));\r\n        if (!file) {\r\n            history.push(\"/\");\r\n            return []\r\n        }\r\n        const children_arr_names = file[\"children\"];\r\n        return children_arr_names.map(id => fileSystem.find(obj => obj.id === id));\r\n\r\n    });\r\n    return (\r\n        <>\r\n\r\n            {children.length > 0 ? children.map(child => {\r\n                const isSelectedFile = selectedFiles.includes(child.id);\r\n                return (\r\n                    <Grid item>\r\n                        <Icon file={child} rootdir={rootdir} url={url} selectedFiles={selectedFiles} isSelectedFile={isSelectedFile} updateSelectedFiles={setSelectedFiles} />\r\n                    </Grid>\r\n                )\r\n            }\r\n\r\n            )\r\n                :\r\n                <Grid item container spacing={2} justify=\"center\" alignItems=\"center\" style={{ marginTop: \"20vh\" }} direction=\"column\">\r\n                    <Grid item >\r\n                        <img src={addFilesImg} style={{ width: \"100%\", height: 200 }}></img>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"body1\">Start uploading files.....</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"body2\">Note: Only meta data of the files are used while uploading and downloading assets. Contents of the assets are not stored</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n\r\n        </>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport { TextField } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { filesys_types } from '../../Constants';\r\n\r\nexport default function SearchBox(props) {\r\n  const history = useHistory();\r\n  const files = useSelector(({ fileSystem }) => {\r\n    if (fileSystem) {\r\n      return fileSystem.filter(file => file.filesys_type === \"FILE\")\r\n    }\r\n  });\r\n\r\n  const handleChange = (event, file) => {\r\n    if (file.filesys_type === filesys_types[\"FOLDER\"]) {\r\n      history.push(atob(file.id));\r\n      return;\r\n    }\r\n    if (file.filesys_type === filesys_types[\"ROOT\"] || file.parent === \"ROOT\") {\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n    history.push(atob(file.parent));\r\n  }\r\n  return (\r\n    <Autocomplete\r\n      id=\"country-select-demo\"\r\n      style={{ width: 300 }}\r\n      options={files}\r\n      autoHighlight\r\n      getOptionLabel={(option) => `${option.name}`}\r\n      onChange={handleChange}\r\n      size=\"small\"\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Search files\"\r\n\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { generateId } from '../../utils/util'\r\nimport { addFiles } from '../../store/fileSystem/action'\r\nimport { addFolder } from '../../store/fileSystem/action';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { NEWFOLDER_NAME } from \"../../Constants\"\r\nimport SearchBox from './SearchBox';\r\nexport default function Actions(props) {\r\n  const { rootDir, url } = props;\r\n  const dispatch = useDispatch();\r\n  const uploadRef = React.useRef(null);\r\n  const [error, setError] = React.useState(null);\r\n  const existingFiles = useSelector(({ fileSystem }) => {\r\n    return fileSystem.map(file => file.id).filter(id => id !== \"ROOT\")\r\n  })\r\n\r\n  const openUploadDialog = () => {\r\n    uploadRef.current.click();\r\n  }\r\n\r\n  const handleFileChange = (e) => {\r\n    let uploaded_files = Object.values(e.target.files);\r\n    if (uploaded_files.length > 0) {\r\n      const existing_files_uploaded = []\r\n      uploaded_files = uploaded_files.filter(file => {\r\n        if (!existingFiles.includes(generateId(url, file.name))) {\r\n          return true\r\n        }\r\n        existing_files_uploaded.push(file.name)\r\n      });\r\n      if (existing_files_uploaded.length > 0) {\r\n        setError(\"File exists\")\r\n      }\r\n      if (uploaded_files.length > 0) {\r\n        dispatch(addFiles(uploaded_files, rootDir, url));\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleCreateFolder = () => {\r\n    if (existingFiles.includes(generateId(url, NEWFOLDER_NAME))) {\r\n      setError(`${NEWFOLDER_NAME} already exists`)\r\n      return;\r\n    }\r\n    dispatch(addFolder(rootDir, url));\r\n  }\r\n\r\n  const handleErrorClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <Grid item container alignItems=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Button size=\"small\" variant=\"text\" startIcon={<CreateNewFolderIcon style={{ color: \"#F8D775\" }} />} onClick={handleCreateFolder}>New folder</Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button size=\"small\" variant=\"text\" startIcon={<PublishIcon style={{ color: \"green\" }} />} onClick={openUploadDialog}>Upload File</Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <SearchBox />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <input id='upload-file' ref={uploadRef} onChange={handleFileChange} type='file' hidden multiple />\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={error ? true : false}\r\n        autoHideDuration={3000}\r\n        onClose={handleErrorClose}\r\n        message={error}\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Grid, Container, Typography, IconButton } from '@material-ui/core';\r\nimport FileView from './FilesView'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Actions from './Actions'\r\nimport { Switch, Route, useParams, useRouteMatch, useHistory } from 'react-router-dom';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function MainPanelContainer() {\r\n  const classes = useStyles();\r\n  const { fileName } = useParams();\r\n  const { url, isExact } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  }\r\n  return (\r\n    <div >\r\n      {isExact && <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={5}>\r\n          <Grid item container justify=\"space-between\">\r\n            <Grid item container spacing={3} md={3} alignItems=\"center\">\r\n              <Grid item>\r\n                <IconButton onClick={handleBack}>\r\n                  <ArrowBackIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">{fileName}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Actions rootDir={fileName} url={url} />\r\n            </Grid>\r\n\r\n          </Grid>\r\n          <Grid item container spacing={5}>\r\n            <FileView rootdir={fileName} url={url} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>}\r\n      <Switch>\r\n        <Route path={`${url}/:fileName`}>\r\n          <MainPanelContainer />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, Button, Divider } from '@material-ui/core';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport DescriptionSharpIcon from '@material-ui/icons/DescriptionSharp';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport { filesys_types } from '../../Constants';\r\nimport Cloud from '@material-ui/icons/Cloud';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 400,\r\n    marginTop: 20\r\n  },\r\n}));\r\n\r\nexport default function RecursiveTreeView() {\r\n  const classes = useStyles();\r\n  const filesystem = useSelector(({ fileSystem }) => {\r\n    return fileSystem;\r\n  });\r\n  const history = useHistory();\r\n\r\n  const handleItemClick = (file) => {\r\n    if (file.filesys_type === filesys_types[\"FOLDER\"]) {\r\n      history.push(atob(file.id));\r\n      return;\r\n    }\r\n    if (file.filesys_type === filesys_types[\"ROOT\"] || file.parent === \"ROOT\") {\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n    history.push(atob(file.parent));\r\n  }\r\n\r\n  const renderTree = (filesystem, rootDir = \"ROOT\") => {\r\n    const rootDirObj = filesystem.find(file => file.id === rootDir)\r\n    return (\r\n      <TreeItem key={rootDirObj.id} nodeId={rootDirObj.id} label={\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item>\r\n            {renderIcon(rootDirObj.filesys_type)}\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body2\" className={classes.labelText}>\r\n              {rootDirObj.name}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      }\r\n        onClick={() => { handleItemClick(rootDirObj) }}\r\n      >\r\n        {Array.isArray(rootDirObj.children) ? rootDirObj.children.map((node) => renderTree(filesystem, node)) : null}\r\n      </TreeItem>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container direction=\"column\" spacing={2} >\r\n        <Grid item container spacing={3} alignItems=\"center\">\r\n          <Grid item>\r\n            <Cloud style={{ fontSize: 40, color: \"#6b96e4\" }} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Asset Drive</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        <Grid item>\r\n          <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpanded={['root']}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n          >\r\n            {renderTree(filesystem)}\r\n          </TreeView>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst renderIcon = (filesys_type) => {\r\n  if (filesys_type === \"ROOT\") {\r\n    return <StorageIcon />\r\n  } else if (filesys_type === filesys_types[\"FILE\"]) {\r\n    return <DescriptionSharpIcon style={{ color: \"#7d7d7d\" }} />\r\n  } else if (filesys_type === filesys_types[\"FOLDER\"]) {\r\n    return <FolderIcon style={{ color: \"#F8D775\" }} />\r\n  }\r\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, CssBaseline } from '@material-ui/core';\nimport FileSystemContainer from './components/main-panel/MainPanelContainer'\nimport FileTree from './components/left-panel/FileTree'\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { ROOTNAME } from './Constants'\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  drawer: {\n    position: 'relative',\n    width: drawerWidth,\n    padding: 20\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflowY: 'auto',\n    overflowX: 'hidden'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawer,\n        }}\n      >\n\n        <FileTree />\n      </Drawer>\n      <main className={classes.content}>\n        <Switch>\n          <Route path=\"/:fileName\">\n            <FileSystemContainer />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to={\"/\" + ROOTNAME} />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n\n  );\n}\n\nexport default App;\n","import {\r\n  ADD_FOLDER,\r\n  ADD_FILES,\r\n  DELETE_FOLDER,\r\n  RENAME_FILE\r\n} from \"./action\";\r\nimport { generateId } from '../../utils/util';\r\nimport { ROOTNAME, filesys_types, NEWFOLDER_NAME } from \"../../Constants\";\r\nconst initialState = [\r\n  { filesys_type: \"ROOT\", id: \"ROOT\", name: ROOTNAME, children: [] },\r\n];\r\n\r\nexport default function fileSystemReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_FOLDER: {\r\n      const folderName = NEWFOLDER_NAME\r\n      const newFolderId = generateId(action.parentPath, folderName);\r\n\r\n      // Update the parent folder's children\r\n      const newstate = state.map((file) => {\r\n        if (file.id === action.rootDirId) {\r\n          return { ...file, children: file.children.concat(newFolderId) }\r\n        }\r\n        return file;\r\n      })\r\n      // Add new entry for the new folder\r\n      const currDate = new Date();\r\n      return [\r\n        ...newstate,\r\n        { filesys_type: filesys_types[\"FOLDER\"], size: 0, id: newFolderId, name: folderName, parent: action.rootDirId, children: [], createdDate: `${currDate.getDate()}/${currDate.getMonth() + 1}/${currDate.getFullYear()}` },\r\n      ];\r\n    }\r\n    case ADD_FILES: {\r\n\r\n      // Update the parent folder's children \r\n      const newstate = state.map(file => {\r\n        if (file.id === action.rootDirId) {\r\n          const fileList = Object.values(action.files)\r\n          if (fileList.length === 0) {\r\n            return\r\n          }\r\n          return {\r\n            ...file, size: (file.size + fileList.map(file => file.size).reduce((prev, curr) => prev + curr)), children: file.children.concat(...fileList.map(file => {\r\n              return generateId(action.parentPath, file.name)\r\n            }))\r\n          }\r\n        }\r\n        return file\r\n      });\r\n\r\n      // Add new entry for the new file\r\n      const currDate = new Date();\r\n      return [\r\n        ...newstate,\r\n        ...(Object.values(action.files)).map(file => {\r\n          return { filesys_type: filesys_types[\"FILE\"], id: generateId(action.parentPath, file.name), parent: action.rootDirId, name: file.name, size: file.size, type: file.type, createdDate: `${currDate.getDate()}/${currDate.getMonth() + 1}/${currDate.getFullYear()}` }\r\n        })\r\n      ];\r\n    }\r\n    case DELETE_FOLDER: {\r\n      const newstate = state.map((file) => {\r\n        // Remove folder's entry from its parent\r\n        if (file.id === action.rootDirId) {\r\n          return { ...file, children: file.children.filter(child => !action.fileIds.includes(child)) }\r\n        }\r\n\r\n        return file;\r\n      })\r\n        // Remove the folder's entry and remove its children\r\n        .filter(file => !action.fileIds.includes(file.id) && !action.fileIds.includes(file.parent))\r\n      return newstate\r\n    }\r\n\r\n    case RENAME_FILE: {\r\n      const newState = state.map((file) => {\r\n        // Restricting the new name to apply for the filename before extension\r\n        if (file.id === action.oldFileId) {\r\n          file.id = action.newFileId;\r\n          if (file.filesys_type === filesys_types[\"FILE\"]) {\r\n            let extension = file.name.split(\".\")[1]\r\n            file.name = `${action.newFileName}.${extension}`\r\n          } else {\r\n            file.name = action.newFileName;\r\n          }\r\n\r\n        }\r\n        // Updating parent's children \r\n        if (file.id === action.rootDirId) {\r\n          file[\"children\"] = file[\"children\"].map(fileId => {\r\n            if (fileId === action.oldFileId) {\r\n              return action.newFileId;\r\n            }\r\n            return fileId;\r\n          })\r\n        }\r\n        // Update children if it is a folder\r\n        if (action.filesys_type === filesys_types[\"FOLDER\"] && file.parent === action.oldFileId) {\r\n          file.parent = action.newFileId\r\n        }\r\n        return file;\r\n      });\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {createStore} from 'redux';\r\nimport fileSystemReducer from './fileSystem/reducer';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst rootReducer = combineReducers({fileSystem: fileSystemReducer});\r\n\r\nexport default createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store/store';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}